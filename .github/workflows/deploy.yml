name: Publish Docker image

on:
  release:
    types: [published]
  pull_request:
  push:
    branches:
      - main
    paths:
      - Dockerfile
      - src/**
      - poetry.lock
      - pyproject.toml

jobs:
  lint:
    name: Python Lint
    runs-on: ubuntu-latest
    steps:
      - name: Step 1 - Checkout
        uses: actions/checkout@v4
      - name: Step 2 - Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          check-latest: true
      - name: Step 3 - Install Poetry and Dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry lock
          poetry install
      - name: Step 4 - Lint
        run: ./lint.sh

  push_to_registries:
    needs:
      - lint
    if: github.event_name == 'release' || github.base_ref == 'main'
    name: Push Docker image to multiple registries
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.ACTIONS_GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        if: github.event_name == 'release'
        uses: docker/metadata-action@v5
        with:
          images: |
            jnstockley/web-scrapper
            ghcr.io/jnstockley/web-scrapper
          tags: |
            latest
            ${{ github.event.release.tag_name }}

      - name: Get repository description
        id: get-repo-description
        uses: actions/github-script@v7.0.1
        if: github.event_name == 'release'
        with:
          script: |
            const repo = await github.rest.repos.get({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            return repo.data.description;
          result-encoding: string

      - name: Update Docker Description and README
        uses: peter-evans/dockerhub-description@v4.0.0
        if: github.event_name == 'release'
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: jnstockley/web-scrapper
          short-description: ${{ steps.get-repo-description.outputs.result }}

      - name: Extract metadata for main branch
        id: meta_main
        if: github.base_ref == 'main'
        run: |
          echo "tags=jnstockley/web-scrapper:testing,jnstockley/web-scrapper:testing-$(date +'%Y%m%d%H%M%S'),ghcr.io/jnstockley/web-scrapper:testing,ghcr.io/jnstockley/web-scrapper:testing-$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags || env.tags }}
          labels: ${{ steps.meta.outputs.labels }}
